07 prob 01.

select
TO_CHAR(hire_date,'MM')||'월' 월,count(*) 직원수
from employees
GROUP BY TO_CHAR(hire_date,'MM')
ORDER BY 월 ;

Prob 02.

select
d.department_name, e.first_name, e.salary
from employees e, departments d
WHERE e.department_id = d.department_id
AND (e.salary, d.department_name) IN (
select
MAX(e.salary), d.department_name
FROM employees e, departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name);

Prob 03.

-부서별 직원들의 최대,최소,평균급여 조회
-평균급여가 IT 부서의 평균보다 많고 Sales 부서의 적은 부서 정보만 출력

SELECT
d.department_name,
MAX(salary),
MIN(salary),
AVG(salary)
FROM employees e, departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name
HAVING AVG(e.salary) > (
SELECT
AVG(salary)
FROM employees e, departments d
WHERE e.department_id = d.department_id
AND d.department_name = 'IT'
GROUP BY d.department_name)
AND AVG(salary) < (
SELECT
AVG(salary)
FROM employees e, departments d
WHERE e.department_id = d.department_id
AND d.department_name = 'Sales'
GROUP BY d.department_name);

Prob 04.
- 각 부서별로 직원이 한명만 있는 부서 조회
- 직원이 없는 부서에 대해서는 '<신생부서>'
- 출력결과는 부서명이 내림차순 정렬

select
NVL(d.department_name,'<신생부서>') 부서명,
count(*) 직원수
FROM employees e, departments d
WHERE e.department_id = d.department_id(+)
GROUP BY d.department_name
HAVING count(*) = 1
ORDER BY d.department_name DESC NULLS LAST;

Prob 02-01.
- 부서별 입사월별 직원 수 출력
- 직원 수 5명 이상인 부서만 출력
- 출력결과는 부서이름 순

select
d.department_name 부서명,
TO_CHAR(hire_date,'MM') 입사월,
count(*) 직원수
FROM employees e, departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name,
TO_CHAR(hire_date,'MM')
HAVING count(*) >=5
ORDER BY d.department_name;

Prob 02-02. // 다시풀어서 이해하기
- 국가별 도시별 직원 수 조회
- 부서정보가 없는 직원은 국가명과 도시명 대신 '<부서없음>' 으로 출력

select
NVL(c.country_name,'<부서없음>') 국가명,
NVL(l.city,'<부서없음>') 도시명,
count(*) 직원수
FROM countries c, locations l, departments d, employees e
WHERE c.country_id(+) = l.country_id
AND d.location_id = l.location_id(+)
AND d.department_id(+)=e.department_id
GROUP BY c.country_name,l.city;


Prob 02-03
- 각 부서 별 최대 급여자의
- 아이디, 이름, 급여
- 최대 급여자가 속한 부서의 평균급여를 마지막으로 출력하여
- 평균급여와 비교

select
e.employee_id 직원아이디,
e.first_name 이름,
vt.maxsal 급여,
vt.avgsal 부서평균
FROM employees e, (select
e.department_id dpi,
MAX(e.salary) maxsal,
ROUND(AVG(e.salary),2) avgsal
FROM employees e
GROUP BY e.department_id) vt
WHERE e.salary = vt.maxsal AND vt.dpi = e.department_id;


(select
d.department_name dpt,
MAX(e.salary) maxsal,
ROUND(AVG(e.salary),2) avgsal
FROM departments d, employees e
WHERE e.department_id = d.department_id
GROUP BY d.department_name) vt


Prob02-04.
- 급여 등급별 직원 수 출력

CREATE TABLE SALGRADE(
GRADE NUMBER(2) PRIMARY KEY,
LOSAL NUMBER(5) NOT NULL,
HISAL NUMBER(5) NOT NULL);

INSERT INTO SALGRADE(GRADE,LOSAL,HISAL)
VALUES(1,1000,5000);
INSERT INTO SALGRADE(GRADE,LOSAL,HISAL)
VALUES(2,5001,10000);
INSERT INTO SALGRADE(GRADE,LOSAL,HISAL)
VALUES(3,10001,20000);
INSERT INTO SALGRADE(GRADE,LOSAL,HISAL)
VALUES(4,20001,30000);

SELECT
s.grade||'등급' 급여등급,
count(*) 직원수
FROM employees e, salgrade s
WHERE e.salary BETWEEN losal AND hisal
GROUP BY s.grade
ORDER BY s.grade;

Prob 03-01.
- 커미션별 직원수를 조회
- 0.2,0.25 > .2 , 0.3,0.35 > .3
- 커미션 정보가 없는 직원 그룹은 '<커미션 없음>'

select
NVL(TO_CHAR(TRUNC(commission_pct,1)),'<커미션 없음>') 커미션,
count(*) 직원수
from employees
GROUP BY TRUNC(commission_pct,1);

Prob 03-02.
- 커미션을 가장 많이 받는 상위 4명의 부서명, 직원명, 급여, 커미션 정보 조회
- 출력결과 커미션을 많이 받는 순서로 출력, 동일한 커미션에 대해서는 급여가 높은 직원이 먼저 출력

select
부서명,
직원명,
급여,
커미션
from (
select
d.department_name 부서명,
e.first_name 직원명,
e.salary 급여,
e.commission_pct 커미션
from employees e, departments d
where e.department_id = d.department_id AND e.commission_pct IS NOT NULL
ORDER BY e.commission_pct DESC, e.salary DESC)
where rownum <= 4;